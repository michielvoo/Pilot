name: Pilot

on:
  push:
    branches:
      - main
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  pull_request: {}

defaults:
  run:
    shell: pwsh

jobs:
  test:
    name: Test
    strategy:
      matrix:
        version: [PowerShell 5.1, PowerShell 7.2, PowerShell 7.4]
    runs-on: ${{ matrix.version == 'PowerShell 5.1' && 'windows-latest' || 'ubuntu-latest' }}
    container: ${{ matrix.version == 'PowerShell 5.1' && 'null' || format('mcr.microsoft.com/powershell:{0}-alpine-3.17, endsWith(matrix.version, '7.2') && 'lts-72' || '7.4') }}
    defaults:
      run:
        shell: ${{ matrix.version == 'PowerShell 5.1' && 'powershell' || 'pwsh' }}
    steps:
      - uses: actions/checkout@v4

      - name: Test
        id: test
        run: |
          Write-Warning "PowerShell version and edition: $($PSVersionTable.PSVersion) $PSEdition"
          Install-Module Pester -Force
          Invoke-Pester -Configuration @{
             CodeCoverage = @{
                 Enabled = $true
             }
             Run = @{
                 Exit = $true
             }
          }

  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    needs:
      - test
    outputs:
      environment: ${{ steps.select.outputs.environment }}
    steps:
      - name: Select environment
        id: select
        run: |
          $InformationPreference = "Continue"
          $environment = "${{ github.ref_type }}" -eq "tag" ? "PowerShell Gallery" : "MyGet"
          Write-Output "environment=$environment" >> "$Env:GITHUB_OUTPUT"

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: prepare
    environment: ${{ needs.prepare.outputs.environment }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Publish
        id: publish
        run: |
          $InformationPreference = "Continue"

          $manifest = Import-PowerShellDataFile ./Pilot.psd1
          foreach ($module in $manifest.RequiredModules) {
              Install-Module $module.ModuleName -Force -RequiredVersion $module.RequiredVersion
          }

          Import-Module ./Pilot.psd1

          $packageFileName = Publish-PowerShellModule `
              -Ref ("${{ github.event_name }}" -eq "pull_request" ? "${{ github.head_ref }}" : "${{ github.ref_name }}") `
              -Build ${{ github.run_number }} `
              -NuGetApiKey "${{ secrets.NUGET_API_KEY }}" `
              -NuGetUrl "${{ vars.NUGET_URL }}"

          Write-Output "package=$packageFileName" >> "$Env:GITHUB_OUTPUT"

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.publish.outputs.package }}
          path: artifacts/${{ steps.publish.outputs.package }}
